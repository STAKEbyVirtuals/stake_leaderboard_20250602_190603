name: STAKE Leaderboard Auto Update (Apps Script Web App)

on:
  # 6시간마다 자동 실행 (UTC 기준: 00:00, 06:00, 12:00, 18:00)
  schedule:
    - cron: '0 */6 * * *'
  
  # 수동 실행 가능
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force full data update'
        required: false
        default: false
        type: boolean

# 환경변수 설정
env:
  PYTHONUNBUFFERED: 1
  TZ: Asia/Seoul

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    permissions:
      contents: write  # JSON 파일 커밋을 위한 권한
      pages: write     # GitHub Pages 배포 권한
      id-token: write  # 토큰 권한
    
    steps:
    # 1. 코드 체크아웃
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
    
    # 2. Python 환경 설정
    - name: 🐍 Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    # 3. 의존성 설치
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install requests pandas schedule python-dateutil pytz
        fi
    
    # 4. Python 스크립트 실행 전 준비
    - name: ⚙️ Prepare Environment
      run: |
        echo "🚀 STAKE 리더보드 업데이트 시작 (Apps Script Web App 연동)"
        echo "⚠️ 기존 21개 컬럼만 업데이트 (A:U 범위)"
        echo "✅ 신규 18개 컬럼 보호 (V:AM 범위)"
        echo "🔗 Apps Script Web App으로 전송"
        echo "⏰ 실행 시간: $(date)"
        echo "🌍 타임존: $TZ"
        
        # 백업 디렉토리 생성
        mkdir -p python-scripts/backup
        
        # 환경변수 확인 (민감정보 제외)
        echo "🔗 Apps Script Web App URL 설정: ${APPS_SCRIPT_WEB_APP_URL:0:50}..."
    
    # 5. ⚠️ 안전 모드: Apps Script Web App으로 업데이트
    - name: 🚀 Update STAKE Leaderboard (Apps Script Web App)
      env:
        APPS_SCRIPT_WEB_APP_URL: ${{ secrets.APPS_SCRIPT_WEB_APP_URL }}
        SAFE_MODE: true  # 🆕 안전 모드 활성화
        UPDATE_RANGE: "A:U"  # 🆕 업데이트 범위 제한
      working-directory: python-scripts
      run: |
        echo "🚀 Apps Script Web App으로 STAKE 데이터 전송 시작..."
        echo "📊 업데이트 범위: A:U (기존 21개 컬럼만)"
        echo "🔒 신규 컬럼 보호: V:AM (Apps Script 자동 처리)"
        echo "🔗 Sheet.best 완전 제거 → Apps Script Web App 연동"
        
        # 타임아웃과 함께 Python 스크립트 실행
        timeout 10800 python stake_leaderboard_system.py || {
          echo "❌ 스크립트 실행 실패 또는 타임아웃"
          exit 1
        }
        
        echo "✅ STAKE 리더보드 Apps Script Web App 업데이트 완료"
    
    # 6. 백업 파일 아티팩트로 저장
    - name: 💾 Save Backup Files
      if: always()  # 실패해도 백업 파일 저장
      uses: actions/upload-artifact@v4
      with:
        name: stake-leaderboard-backup-${{ github.run_number }}
        path: |
          python-scripts/backup/*.csv
          python-scripts/backup/*.json
          python-scripts/*.log
        retention-days: 30
        if-no-files-found: ignore
    
    # 7. Apps Script Web App 실행 결과 요약
    - name: 📊 Apps Script Web App Execution Summary
      if: always()
      run: |
        echo "🎯 === STAKE Apps Script Web App 업데이트 완료 ==="
        echo "🚀 Sheet.best 완전 제거 → Apps Script Web App 연동"
        echo "🛡️ 보호된 범위: V:AM (신규 18개 컬럼)"
        echo "✅ 업데이트된 범위: A:U (기존 21개 컬럼)"
        echo "🔗 Apps Script에서 39개 컬럼 완전 처리"
        echo "📅 실행 시간: $(date)"
        echo "🔢 실행 번호: ${{ github.run_number }}"
        echo "📂 백업 파일 생성: python-scripts/backup/"
        echo ""
        echo "🔄 다음 단계:"
        echo "1. Apps Script Web App이 POST 요청 수신"
        echo "2. 기존 21개 컬럼 구글시트 업데이트"
        echo "3. 신규 18개 컬럼 자동 계산 및 추가"
        echo "4. 39개 컬럼 완전한 JSON 파일 생성"
        echo "5. 완전한 STAKE 리더보드 시스템 가동"
        
        # 백업 파일 목록 출력
        if [ -d "python-scripts/backup" ]; then
          echo "📁 생성된 백업 파일:"
          ls -la python-scripts/backup/ || echo "백업 파일 없음"
        fi
        
        # 로그 파일 확인
        if [ -f "python-scripts/stake_leaderboard.log" ]; then
          echo "📋 마지막 로그 10줄:"
          tail -10 python-scripts/stake_leaderboard.log
        fi
    
    # 8. 실패 시 알림 (선택사항)
    - name: 🚨 Failure Notification
      if: failure()
      run: |
        echo "💥 STAKE 리더보드 Apps Script Web App 업데이트 실패!"
        echo "🔍 로그를 확인하여 문제를 진단하세요."
        echo "📧 GitHub Actions 탭에서 상세 로그를 확인할 수 있습니다."
        echo "⚠️ 신규 18개 컬럼은 영향받지 않습니다."
        echo "🔄 Apps Script Web App 연동 문제일 수 있습니다."
        
        # 에러 로그 출력
        if [ -f "python-scripts/stake_leaderboard.log" ]; then
          echo "❌ 에러 로그:"
          tail -20 python-scripts/stake_leaderboard.log
        fi

# 동시 실행 제한 (중복 실행 방지)
concurrency:
  group: stake-leaderboard-update-apps-script
  cancel-in-progress: false